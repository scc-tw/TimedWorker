name: CI
on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        include:
          # GCC ≥ 11 needed for C++23 core (we pick 13 on Ubuntu 24.04)
          - os: ubuntu-24.04
            compiler: gcc-13
            tool: aminya
          # Clang ≥ 13 needed for C++23 core (we pick 18 upstream)
          - os: ubuntu-24.04
            compiler: llvm-18
            tool: aminya
          # AppleClang not support jthread
          - os: macos-14
            compiler: clang-18
            tool: brew
          # MSVC ≥ 19.44 (VS 2022 v17.4+) needed for C++23 core
          - os: windows-2022
            compiler: msvc
            tool: aminya
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # Cache build directory with compiler in the key
      - name: Cache build directory
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build-${{ matrix.compiler }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.compiler }}-
            ${{ runner.os }}-build-

      # Linux & Windows: use aminya/setup-cpp to install gcc/clang/msvc
      - name: Setup C++ toolchain (Ubuntu/Windows)
        if: matrix.tool == 'aminya'
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          cmake: true
          ninja: true
          ccache: true # Enable ccache for better caching of object files

      # macOS: install latest LLVM via Homebrew to get std::jthread support
      - name: Install LLVM via Homebrew (macOS)
        if: matrix.tool == 'brew'
        run: |
          brew update
          brew install llvm
          # Prepend brewed LLVM to PATH
          echo "$(brew --prefix llvm)/bin" >> $GITHUB_PATH
          # Use brewed clang/clang++ explicitly
          echo "CC=$(brew --prefix llvm)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm)/bin/clang++" >> $GITHUB_ENV

      - name: Configure
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build & Test
        run: |
          cmake --build build --config Release
          ctest --test-dir build --output-on-failure
